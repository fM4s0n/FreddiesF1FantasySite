@page "/Fantasy/Home"

@using DataAccess.Database
@using DataAccess.API
@using DataAccess.Models
@using DataAccess.Models.Fantasy
@using DataAccess.Services
@using FreddiesF1FantasySite.Controls
@using System.Linq

@inject AppStateService appState
@inject ILeagueData leagueData
@inject ITeamData teamData

<h2 style="text-align:center">Fantasy Home</h2>

@if (appState.isLoggedIn)
{
    <div>
        <div>
            <h2>My Leagues</h2>
            <a href="/Fantasy/CreateLeague">Create a new League</a>

            @if (leagues is not null)
            {
                @foreach (FantasyLeagueModel league in leagues)
                {
                    <div class="fantasy-league-home-control" style="flex:auto">
                        <div class="fantasy-home-control-head">
                            <h4 style="flex-grow:20">@league.Name</h4>
                            <a href="/Fantasy/ManageLeague/LeagueId=(@league.LeagueId)" style="flex-grow:1"><i class="fa-solid fa-gear"></i></a>
                        </div>

                        @if(league.Teams is not null)
                        {
                            <table class="table">
                                <thead>
                                    <tr>
                                        <th>Pos.</th>
                                        <th>Team</th>
                                        <th>Points</th>
                                        <th> </th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @for (int i = 0; i < league.Teams.Count; i++)
                                    {
                                        <tr>
                                            <td>@(i+1).</td>
                                            <td>@league.Teams[i].Name</td>
                                            <td>@(league.Teams[i].TotalPoints) pts</td>
                                            @if(league.Teams[i].OwnerId == appState.currentUser.UserId)
                                            {
                                                <td>
                                                    <a href="/Fantasy/ManageTeam/TeamId=(@league.Teams[i].TeamId)" style="flex-grow:1"><i class="fa-solid fa-gear"></i></a>
                                                </td>                                                
                                            }
                                        </tr>
                                    }         
                                </tbody>
                            </table>
                        }
                        else
                        {
                            <p>No teams in this league currently</p>
                        }

                    </div>
                }
            }
            <br /><br />
        </div>

        <h2>My Teams</h2>
        <a href="/Fantasy/CreateTeam">Create a new Team</a>
        @if (teams is not null)
        {
            @foreach (FantasyTeamModel team in teams)
            {
                <div class="fantasy-team-home-control">
                    <div class="fantasy-home-control-head">
                        <h4 style="flex-grow:20">@team.Name</h4>
                        <a href="/Fantasy/ManageTeam/TeamId=(@team.TeamId)" style="flex-grow:1"><i class="fa-solid fa-gear"></i></a>
                    </div>

                    <img class="img" src="" />
                    <img class="img" src="" />
                    <img class="img" src="" />
                    <img class="img" src="" />
                    <img class="img" src="" />
                </div>
            }
        }
    </div>
}
else
{
    <p>Please log in</p>
}




@code {
    List<FantasyTeamModel> teams = new();
    List<FantasyLeagueModel> leagues = new();

    protected override async Task OnInitializedAsync()
    {
        await GetOwnedLeagues();

        await GetTeams();
    }

    private async Task GetOwnedLeagues()
    {
        //get all leagues a user Owns
        leagues = await leagueData.GetAllLeagues();
        foreach (var league in leagues)
        {
            if (league.OwnerId != appState.currentUser.UserId)
                leagues.Remove(league);
        }
    }

    private async Task GetTeams()
    {
        //Get all teams a user owns
        teams = await teamData.GetAllTeams();
        foreach (var t in teams)
        {
            if (t.OwnerId != appState.currentUser.UserId)
                teams.Remove(t);
        }
    }
}
