@page "/Fantasy/CreateLeague"

@using DataAccess.Models.Fantasy
@using DataAccess.Models
@using DataAccess.Database
@using DataAccess.API
@using DataAccess.Services

@inject ILeagueData leagueData
@inject ApiService api
@inject AppStateService appState
@inject NavigationManager navMan

<h3 style="text-align:center">Create a new Fantasy League</h3>

<form id="create-league">
    <label for="leagueNameInput">League name</label>
    <input type="text" class="create-league-input" @bind="league.Name" id="leagueNameInput"/>
    <br /><br />

    <label for="requirePasswordCheckbox">Require password?</label>
    <input type="checkbox" id="requirePasswordCheckbox" @bind="league.RequirePassword"/>
    <p style="font-size:smaller">-Select to require a password when a team enters your league</p>


    @if(league.RequirePassword)
    {
        <label for="leaguePassword1">League Password</label>
        <input type="password" class="create-league-input" id="leaguePassword1" @bind="password1"></input>
        <br /><br />

        <label for="leaguePassword2">Re-enter League Password</label>
        <input type="password" class="create-league-input" id="leaguePassword2" @bind="password2"></input>
        <br /><br />
    }
    <button type="submit" @onclick="OnSubmit" style="width:20%; float:right">Submit</button>
</form>



@code {
    UserModel user = new();
    FantasyLeagueModel league = new();

    string password1 = "";
    string password2 = "";

    protected override void OnInitialized()
    {
        user = appState.currentUser;
    }

    private void OnSubmit()
    {
        league.LeagueId = Guid.NewGuid().ToString();
        league.OwnerId = user.UserId;
        league.CreatedDate = DateTime.Now;

        if (league.RequirePassword && password1 == password2)
        {
            league.Password = password1;
        }

        if (league.RequirePassword && password1 != password2)
            return;

        leagueData.InsertLeague(league);
        navMan.NavigateTo("/Fantasy/Home", true);
    }
}