@page "/Fantasy/ManageLeague/{passedLeagueId}"

@using DataAccess.Database
@using DataAccess.API
@using DataAccess.Services
@using DataAccess.Models.Fantasy
@using DataAccess.Models

@inject UserData userdata
@inject AppStateService appState
@inject ILeagueData leagueData
@inject ITeamData teamData

<h2>Manage My League</h2>
<h3>@currentLeague.Name</h3>

<h3>All teams:</h3>

@foreach(FantasyTeamModel team in teams)
{
    <div class="manage-league-team-control">
        <h4>Team name: @team.Name</h4>
        <p>Team owner: @GetUsername(team.OwnerId)</p>
        <p>Team Value: @team.CurrentTeamValue</p>
        <p>Team Budget remaining: @team.BudgetRemaining</p>
        @if(team.Drivers is not null)
        {
            @foreach(var driver in team.Drivers)
            {
                <p>@driver.DriverId</p>
            }
        }

        <p>Boosted driver: @team.BoostedDriverId</p>
    </div>
}

@code {
    [Parameter]
    public string passedLeagueId { get; set; } = string.Empty;

    FantasyLeagueModel currentLeague = new();
    List<FantasyTeamModel> teams = new();
    List<UserModel> allUsers = new();

    protected override async Task OnInitializedAsync()
    {
        allUsers = await userdata.GetAllUsers();

        List<FantasyLeagueModel> allLeagues = await leagueData.GetAllLeagues();
        foreach(var l in allLeagues)
        {
            if (l.LeagueId == passedLeagueId)
                currentLeague = l;
        }

        //Get all teams in the league
        teams = await teamData.GetTeamsByLeagueId(passedLeagueId);
    }

    /// <summary>
    /// Get the user name of the owner of a team
    /// </summary>
    /// <param name="Ownerid"></param>
    /// <returns></returns>
    private string GetUsername(string Ownerid)
    {
        UserModel teamOwner = new();

        foreach(UserModel u in allUsers)
        {
            if (u.UserId == Ownerid)
                teamOwner = u;
        }
        return teamOwner.Username;
    }
}
