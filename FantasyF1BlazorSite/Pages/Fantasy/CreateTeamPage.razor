@page "/Fantasy/CreateTeam"

@using DataAccess.Models.Fantasy
@using DataAccess.Models
@using DataAccess.Database
@using DataAccess.API
@using DataAccess.Services

@inject ITeamData teamData
@inject ApiService api
@inject AppStateService appState
@inject NavigationManager navMan

@if(appState.isLoggedIn)
{
    <h3>Create a new Fantasy Team</h3>

    <form id="create-team">
        <label>Team name</label>
        <input type="text" class="create-team-imput" @bind="team.Name" />
        <br />  <br />

        <button type="submit" @onclick="OnSubmit">Create Team</button>
        @if(nameTaken)
        {
            <p>name already taken</p>
        }
    </form>
}



@code {
    FantasyTeamModel team = new();
    List<FantasyTeamModel> usersCurrentTeams = new();
    bool nameTaken = false;

    public async void OnSubmit()
    {
        team.TeamId = Guid.NewGuid().ToString();
        team.OwnerId = appState.currentUser.UserId;
        team.CreatedDate = DateTime.Now;

        //check if user has a team with that name
        usersCurrentTeams = await teamData.GetAllTeams();
        foreach (var t in usersCurrentTeams)
        {
            if (t.OwnerId != appState.currentUser.UserId)
                usersCurrentTeams.Remove(t);
        }

        foreach (var t in usersCurrentTeams)
        {
            if (t.Name == team.Name)
            {
                nameTaken = true;
                return;
            }
        }

        await teamData.InsertTeam(team);

        //navigate to manage team
        navMan.NavigateTo($"/Fantasy/ManageTeam{team.TeamId}", false);
    }
}
