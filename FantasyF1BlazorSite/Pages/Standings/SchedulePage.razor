@page "/SeasonSchedule"

@using DataAccess.Services
@using DataAccess.Models
@using DataAccess.Dictionaries
@using DataAccess.API
@using Newtonsoft.Json

@inject ApiService API

<head>
    <title>Season schedule</title>
</head>

<h2 style="text-align:center">Season Schedule</h2>

@if(season.MRData is not null)
{
    <table class="table">
        <thead>
            <tr>
                <th>Round</th>
			    <th class="constructor-table-flag">Country</th>
			    <th>Circuit</th>			    
			    <th>Date</th>
                <th>Sprint weekend</th>
            </tr>
        </thead>
        <tbody>           
            @foreach (SeasonScheduleModel.Race race in season.MRData.RaceTable.Races)
            {
                string flag = GetCircuitFlag(race.Circuit.Location.Country);
                string mapURL = $"https://maps.google.com/maps/@?api=1&map_action=map&center={race.Circuit.Location.Lat},{race.Circuit.Location.Long}&basemap=satellite";

                <tr>
                    <td>@race.Round</td>

                    <td class="constructor-table-flag"><img class="img" id="table-image" src="@flag" /></td>

                    <td><span>@race.Circuit.CircuitName</span><a href="@mapURL"><i class="fa-solid fa-location-dot" style="margin-left:5px"/></a></td>

                    <td>@race.DateEnglishFormat</td>

                    @if (race.Sprint is not null)
                    {
                        <td>Yes</td>
                    }
                    else
                    {
                        <td>No</td>
                    }
                </tr>              
            }
        </tbody>
    </table>
}
else
{
    <a>Loading...</a>
}




@code {
    SeasonScheduleModel.Root season = new();

    protected override async Task OnInitializedAsync()
    {
        string json = await API.GetSeasonScheduleAsync(DateTime.Now.Year.ToString());

        season = JsonConvert.DeserializeObject<SeasonScheduleModel.Root>(json);
    }

    private string GetCircuitFlag(string country)
    {
        return FlagDictionary_CountryName.ConvertCountryName(country);
    }
}
